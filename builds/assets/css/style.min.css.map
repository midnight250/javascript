{"version":3,"sources":["style.css","style.scss","../../node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"AAwCA,KCQA,YAAA,WAAA,CAAA,WDJA,SA1BC,YAAA,KACA,eAAA,KCgDI,0BDvBL,SAvBC,YAAA,KACC,eAAA,MC6CG,yBDvBL,SCfE,YAAA,OACA,eAAA,QAqCG,yBDvBL,SAfE,YAAA,MEwCE,eAAA,ODFC,yBDvBL,SCVE,YAAA,MAYD,eAAA,OCuBG,WDrBJ,iBAAA,QCqBI,uBDnDH,YAAA,KACA,cAAA,EA2BA,eAAA,KDtCC,aAAA,EC2DG,yBCED,uBDzBJ,YAAA,MAvBE,cAAA,EACA,eAAA,MAwBD,aAAA,GDUG,yBAAJ,WCAA,QAAA,GDAA,sBAKC,SAAA,SALG,yBAAJ,2CEAI,QAAA,ODWC,yBDXL,2CCiBI,aAAA,MDFH,cAAA,OAUD,yBAzBA,wBC0BE,OAAA,EDIF,yBA9BA,wBA8BE,iBAAA,QA9BE,yBAoCH,iCApCD,gCAiCI,SAAA,SEjCA,QAAA,GDAJ,IAAA,EDoCI,KAAA,ECHA,MAAA,KACA,OAAA,IACA,iBAAA,SAxBC,yBDsCJ,yBAjDD,wBCuCI,WAAA,MAAA,IAAA,SDvCJ,yBEaI,KAAA,eDbJ,MAAA,eDiDE,QAAA,KAaF,sCADA,sDA7DA,qCCgDE,YAAA,sBACA,UAAA,KACA,QAAA,GDSA,QAAA,aC3DF,eAAA,OD6DE,YAAA,IA7DF,sDCyDE,MAAA,MDzDF,qCC4DE,QAAA,QD5DF,sDAsEE,QAAA,QAtEF,sCCiEE,QAAA","file":"style.min.css","sourcesContent":["body {\n\tfont-family: 'Noto Sans', sans-serif;\n}\n\n.section {\n\tpadding-top: 3rem;\n\tpadding-bottom: 3rem;\n}\n\n@media (max-width: 1199px) {\n\t.section {\n\t\tpadding-top: 1rem;\n\t\tpadding-bottom: 1rem;\n\t}\n}\n\n@media (max-width: 991px) {\n\t.section {\n\t\tpadding-top: 0.75rem;\n\t\tpadding-bottom: 0.75rem;\n\t}\n}\n\n@media (max-width: 767px) {\n\t.section {\n\t\tpadding-top: 0.6rem;\n\t\tpadding-bottom: 0.6rem;\n\t}\n}\n\n@media (max-width: 575px) {\n\t.section {\n\t\tpadding-top: 0.5rem;\n\t\tpadding-bottom: 0.5rem;\n\t}\n}\n\n.header-v1 {\n\tbackground-color: #dee2e6;\n}\n\n.header-v1 .header-top {\n\tpadding-top: 1rem;\n\tpadding-right: 0;\n\tpadding-bottom: 1rem;\n\tpadding-left: 0;\n}\n\n@media (max-width: 575px) {\n\t.header-v1 .header-top {\n\t\tpadding-top: 0.5rem;\n\t\tpadding-right: 0;\n\t\tpadding-bottom: 0.5rem;\n\t\tpadding-left: 0;\n\t}\n}\n\n@media (min-width: 992px) {\n\t.navbar-v1 {\n\t\tpadding: 0;\n\t}\n}\n\n.navbar-v1 > .container {\n\tposition: relative;\n}\n\n@media (min-width: 992px) {\n\t.navbar-v1 .navbar-nav .nav-item .nav-link {\n\t\tpadding: 0.8rem;\n\t}\n}\n\n@media (max-width: 991px) {\n\t.navbar-v1 .navbar-nav .nav-item .nav-link {\n\t\tpadding-left: 0.5rem;\n\t\tpadding-right: 0.5rem;\n\t}\n}\n\n.navbar-v1 .hs-sub-menu,\n.navbar-v1 .hs-mega-menu {\n\tmargin: 0;\n}\n\n.navbar-v1 .hs-sub-menu,\n.navbar-v1 .hs-mega-menu {\n\tbackground-color: #dee2e6;\n}\n\n@media (min-width: 992px) {\n\t.navbar-v1 .hs-sub-menu::before,\n\t.navbar-v1 .hs-mega-menu::before {\n\t\tposition: absolute;\n\t\tcontent: '';\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 3px;\n\t\tbackground-color: #adb5bd;\n\t}\n}\n\n@media (max-width: 991px) {\n\t.navbar-v1 .hs-sub-menu,\n\t.navbar-v1 .hs-mega-menu {\n\t\tborder-top: solid 3px #adb5bd;\n\t}\n}\n\n.navbar-v1 .hs-mega-menu {\n\tleft: 15px !important;\n\tright: 15px !important;\n\tpadding: 15px;\n}\n\n.navbar-v1 .hs-has-sub-menu > a::after,\n.navbar-v1 .hs-has-sub-menu .hs-has-sub-menu > a::after,\n.navbar-v1 .hs-has-mega-menu > a::after {\n\tfont-family: 'Fontawesome' !important;\n\tfont-size: 10px;\n\tcontent: '';\n\tdisplay: inline-block;\n\tvertical-align: middle;\n\tmargin-left: 7px;\n}\n\n.navbar-v1 .hs-has-sub-menu .hs-has-sub-menu > a::after {\n\tright: 0.5rem;\n}\n\n.navbar-v1 .hs-has-sub-menu > a::after {\n\tcontent: '\\f078';\n}\n\n.navbar-v1 .hs-has-sub-menu .hs-has-sub-menu > a::after {\n\tcontent: '\\f054';\n}\n\n.navbar-v1 .hs-has-mega-menu > a::after {\n\tcontent: '\\f078';\n}\n","@import \"../../node_modules/bootstrap/scss/functions\";\r\n@import \"../sass-bootstrap/custom\";\r\n@import \"../../node_modules/bootstrap/scss/mixins\";\r\n\r\n@mixin padding($top, $right, $bottom, $left) {\r\n  padding-top: $top;\r\n  padding-right: $right;\r\n  padding-bottom: $bottom;\r\n  padding-left: $left;\r\n  @include media-breakpoint-down(xs) {\r\n  \tpadding-top: $top/2;\r\n    padding-right: $right/2;\r\n    padding-bottom: $bottom/2;\r\n    padding-left: $left/2;\r\n  }\r\n}\r\n\r\n@mixin paddingTb($top, $bottom){\r\n\tpadding-top: $top;\r\n\tpadding-bottom: $bottom;\r\n\t@include media-breakpoint-down(lg) {\r\n\t\tpadding-top: $top/3;\r\n\t\tpadding-bottom: $bottom/3;\r\n\t}\r\n\t@include media-breakpoint-down(md) {\r\n\t\tpadding-top: $top/4;\r\n\t\tpadding-bottom: $bottom/4;\r\n\t}\r\n\t@include media-breakpoint-down(sm) {\r\n\t\tpadding-top: $top/5;\r\n\t\tpadding-bottom: $bottom/5;\r\n\t}\r\n\t@include media-breakpoint-down(xs) {\r\n\t\tpadding-top: $top/6;\r\n\t\tpadding-bottom: $bottom/6;\r\n\t}\r\n}\r\n\r\n\r\n\r\nbody{\r\n\tfont-family: 'Noto Sans', sans-serif;\r\n}\r\n\r\n.section{\r\n\t@include paddingTb(3rem, 3rem);\r\n}\r\n\r\n.header-v1{\r\n\tbackground-color: $gray-300;\r\n\t.header-top{\r\n\t\t@include padding(1rem, 0, 1rem, 0);\r\n\t}\r\n\t.header-main{\r\n\t}\r\n}\r\n.navbar-v1{\r\n\t@include media-breakpoint-up(lg) {\r\n\t\tpadding: 0;\r\n\t}\r\n\t> .container{\r\n\t\tposition: relative;\r\n\t}\r\n\t.navbar-nav{\r\n\t\t.nav-item{\r\n\t\t\t.nav-link{\r\n\t\t\t\t@include media-breakpoint-up(lg) {\r\n\t\t\t\t\tpadding: 0.8rem;\r\n\t\t\t\t}\r\n\t\t\t\t@include media-breakpoint-down(md) {\r\n\t\t\t\t\tpadding-left: 0.5rem;\r\n\t\t\t\t\tpadding-right: 0.5rem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t// Mega Menu Custom CSS\r\n\t.hs-sub-menu, \r\n\t.hs-mega-menu{\r\n\t\tmargin: 0;\r\n\t}\r\n\t.hs-sub-menu,\r\n\t.hs-mega-menu{\r\n\t\tbackground-color: $gray-300;\r\n\t\t@include media-breakpoint-up(lg) {\r\n\t\t\t&::before{\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tcontent: '';\r\n\t\t\t\ttop: 0;\r\n\t\t\t\tleft: 0;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 3px;\r\n\t\t\t\tbackground-color: $gray-500;\r\n\t\t\t}\r\n\t\t}\r\n\t\t@include media-breakpoint-down(md) {\r\n\t\t\tborder-top: solid 3px $gray-500;\r\n\t\t}\r\n\t}\r\n\t.hs-mega-menu{\r\n\t\tleft: 15px !important;\r\n\t\tright: 15px !important;\r\n\t\tpadding: 15px;\r\n\t}\r\n\r\n\r\n\t.hs-has-sub-menu > a::after,\r\n\t.hs-has-sub-menu .hs-has-sub-menu > a::after,\r\n\t.hs-has-mega-menu > a::after{\r\n\t\tfont-family: 'Fontawesome' !important;\r\n\t\tfont-size: 10px;\r\n\t\tcontent: '';\r\n\t\tdisplay: inline-block;\r\n\t\tvertical-align: middle;\r\n\t\tmargin-left: 7px;\r\n\t}\r\n\t.hs-has-sub-menu .hs-has-sub-menu > a::after{\r\n\t\tright: 0.5rem;\r\n\t}\r\n\t.hs-has-sub-menu > a::after{\r\n\t\tcontent: '\\f078';\r\n\t}\r\n\t.hs-has-sub-menu .hs-has-sub-menu > a::after{\r\n\t\tcontent: '\\f054';\r\n\t}\r\n\t.hs-has-mega-menu > a::after{\r\n\t\tcontent: '\\f078';\r\n\t}\r\n}\r\n\r\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.1.\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - 1px, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @media (min-width: $min) and (max-width: $max) {\n    @content;\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name)\n  } @else if $min == null {\n    @include media-breakpoint-down($name)\n  }\n}\n"]}